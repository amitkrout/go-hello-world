name: CI build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  preparing-k3s-cluster:
    name: web app integration-e2e testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k3s-version: [ v1.22.5 ]
        # k3s-version: [v1.20.2, v1.19.2, v1.18.9, v1.17.11, v1.16.15]
    steps:
      - name: Install K3D with managed registry
        run: |
          set -x
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
          sudo mkdir -p $HOME/.kube && sudo chown -R runner $HOME/.kube
          k3d registry create myregistry.localhost --port 12345
          k3d cluster create --servers 3 --image rancher/k3s:${{ matrix.k3s-version }}-k3s1 --registry-use k3d-myregistry.localhost:12345 --api-port 6550 -p "8081:80@loadbalancer" --agents 2
          kubectl version
          k3d version
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: go fmt check
        run: |
          ./scripts/check-gofmt.sh
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2
          args: --timeout 10m
      - name: Run unit test
        run: |
          go test ./...
      - name: Build the Docker image and push to k3s registry
        run: |
          docker build . --file Dockerfile --tag k3d-myregistry.localhost:12345/hello-go-http:v1.0
          docker push k3d-myregistry.localhost:12345/hello-go-http:v1.0
      - name: Deploy the web application
        run: |
          kubectl create deployment web --image=k3d-myregistry.localhost:12345/hello-go-http:v1.0
          ./scripts/pod-status.sh
          kubectl create service clusterip web --tcp=8080:8080
          kubectl apply -f manifests/ingress.yaml
          sleep 10
          curl http://localhost:8081/helloworld
      - name: Get ginkgo binary and run integration/e2e test
        run: |
          go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo && export PATH=$PATH:$(go env GOPATH)/bin/
          ginkgo version
          ginkgo -focus="Feature-1 integration test" tests/integration/
          ginkgo -focus="End to end scenario - 1" tests/e2e/
